{"version":3,"sources":["unedtfy.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","unedtfy","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_dereq_","parser","parse","string","options","result","./tmp/unedtfy.js",2,"peg$subclass","child","parent","ctor","constructor","prototype","peg$SyntaxError","message","expected","found","location","name","captureStackTrace","peg$parse","input","peg$computePosDetails","pos","p","ch","details","peg$posDetailsCache","line","column","seenCR","charAt","peg$computeLocation","startPos","endPos","startPosDetails","endPosDetails","start","offset","end","peg$fail","peg$maxFailPos","peg$currPos","peg$maxFailExpected","push","peg$buildException","cleanupExpected","sort","b","description","splice","buildMessage","stringEscape","hex","charCodeAt","toString","toUpperCase","replace","expectedDesc","foundDesc","expectedDescs","Array","slice","join","peg$parsestart","s0","peg$parseinterval","peg$FAILED","peg$parsemultiple","peg$parseset","peg$parseapproximate_or_undertain","peg$parsedate","s1","s2","s3","peg$parsecomp","peg$c0","peg$silentFails","peg$c1","peg$savedPos","peg$c2","s4","s5","s6","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$parseopen","peg$parseunknown","peg$parseyear_month_day","peg$parseyear_season","peg$parseyear_month","peg$parseyear","peg$c21","peg$c22","peg$c23","peg$parsemonth","peg$parseday","peg$c24","peg$c25","peg$parseseason","peg$c26","peg$c27","peg$c28","peg$parseyeardigits","peg$c29","peg$parseDIGIT","peg$parseUNKNOWN","substring","substr","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$parseUNKNOWN_MONTH","peg$c38","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$parseUNKNOWN_DAY","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","test","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$result","arguments","peg$startRuleFunctions","peg$startRuleFunction","type","value","d1","d2","interval","dates","d","set","concat","multiple","answer","uncertain","approximate","y","year","m","month","day","season","open","unknown","startRule","SyntaxError"],"mappings":"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","file":"unedtfy.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.unedtfy = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\nvar parser = _dereq_('./tmp/unedtfy.js');\n\nmodule.exports = {\n  parse: function(string, options) {\n    result = parser.parse(string);\n    return result;\n  }\n};\n\n},{\"./tmp/unedtfy.js\":2}],2:[function(_dereq_,module,exports){\nmodule.exports = (function() {\n  \"use strict\";\n\n  /*\n   * Generated by PEG.js 0.9.0.\n   *\n   * http://pegjs.org/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  function peg$parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n        parser  = this,\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = \"/\",\n        peg$c1 = { type: \"literal\", value: \"/\", description: \"\\\"/\\\"\" },\n        peg$c2 = function(d1, d2) {\n          return {\n            interval: true,\n            dates: [d1, d2]\n          }\n        },\n        peg$c3 = \"[\",\n        peg$c4 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n        peg$c5 = \",\",\n        peg$c6 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c7 = function(d1, d) {return d},\n        peg$c8 = \"]\",\n        peg$c9 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n        peg$c10 = function(d1, d2) {\n          return{\n            set: true,\n            dates: [d1].concat(d2)\n          }\n        },\n        peg$c11 = \"{\",\n        peg$c12 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c13 = \"}\",\n        peg$c14 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c15 = function(d1, d2) {\n          return{\n            multiple: true,\n            dates: [d1].concat(d2)\n          }\n        },\n        peg$c16 = \"?\",\n        peg$c17 = { type: \"literal\", value: \"?\", description: \"\\\"?\\\"\" },\n        peg$c18 = \"~\",\n        peg$c19 = { type: \"literal\", value: \"~\", description: \"\\\"~\\\"\" },\n        peg$c20 = function(d, u, a) {\n          var answer = d\n          if (u) answer.uncertain = true\n          if (a) answer.approximate = true\n          return answer\n        },\n        peg$c21 = function(y) {return {year: y}},\n        peg$c22 = \"-\",\n        peg$c23 = { type: \"literal\", value: \"-\", description: \"\\\"-\\\"\" },\n        peg$c24 = function(y, m, d) {\n          return {year: y, month: m, day: d}\n        },\n        peg$c25 = function(y, m) {\n          return {year: y, month: m}\n        },\n        peg$c26 = function(y, s) {\n          return {year: y, season: s}\n        },\n        peg$c27 = \"y\",\n        peg$c28 = { type: \"literal\", value: \"y\", description: \"\\\"y\\\"\" },\n        peg$c29 = function(a) {return a.join('')},\n        peg$c30 = \"21\",\n        peg$c31 = { type: \"literal\", value: \"21\", description: \"\\\"21\\\"\" },\n        peg$c32 = \"22\",\n        peg$c33 = { type: \"literal\", value: \"22\", description: \"\\\"22\\\"\" },\n        peg$c34 = \"23\",\n        peg$c35 = { type: \"literal\", value: \"23\", description: \"\\\"23\\\"\" },\n        peg$c36 = \"24\",\n        peg$c37 = { type: \"literal\", value: \"24\", description: \"\\\"24\\\"\" },\n        peg$c38 = function(d) {return '0' + d},\n        peg$c39 = \"u\",\n        peg$c40 = { type: \"literal\", value: \"u\", description: \"\\\"u\\\"\" },\n        peg$c41 = function() {return 'uu'},\n        peg$c42 = \"x\",\n        peg$c43 = { type: \"literal\", value: \"x\", description: \"\\\"x\\\"\" },\n        peg$c44 = function() {return 'xx'},\n        peg$c45 = \"open\",\n        peg$c46 = { type: \"literal\", value: \"open\", description: \"\\\"open\\\"\" },\n        peg$c47 = function() {return {open: true}},\n        peg$c48 = \"unknown\",\n        peg$c49 = { type: \"literal\", value: \"unknown\", description: \"\\\"unknown\\\"\" },\n        peg$c50 = function() {return {unknown: true}},\n        peg$c51 = /^[0-9]/,\n        peg$c52 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c53 = /^[0-1]/,\n        peg$c54 = { type: \"class\", value: \"[0-1]\", description: \"[0-1]\" },\n        peg$c55 = /^[0-3]/,\n        peg$c56 = { type: \"class\", value: \"[0-3]\", description: \"[0-3]\" },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(\n        message,\n        null,\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos],\n          p, ch;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column,\n          seenCR: details.seenCR\n        };\n\n        while (p < pos) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, found, location) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new peg$SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parseinterval();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsemultiple();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseset();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseapproximate_or_undertain();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsedate();\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseinterval() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsecomp();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 47) {\n          s2 = peg$c0;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsecomp();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c2(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseset() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c3;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c4); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsecomp();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c5;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsecomp();\n            if (s6 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c7(s2, s6);\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s5 = peg$c5;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c6); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsecomp();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s4;\n                  s5 = peg$c7(s2, s6);\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 93) {\n              s4 = peg$c8;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c9); }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c10(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsemultiple() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c11;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c12); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsecomp();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c5;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parsecomp();\n            if (s6 !== peg$FAILED) {\n              peg$savedPos = s4;\n              s5 = peg$c7(s2, s6);\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s5 = peg$c5;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c6); }\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsecomp();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s4;\n                  s5 = peg$c7(s2, s6);\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 125) {\n              s4 = peg$c13;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c15(s2, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsecomp() {\n      var s0;\n\n      s0 = peg$parseapproximate_or_undertain();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsedate();\n      }\n\n      return s0;\n    }\n\n    function peg$parseapproximate_or_undertain() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsedate();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 63) {\n          s2 = peg$c16;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c17); }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 126) {\n            s3 = peg$c18;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c19); }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c20(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsedate() {\n      var s0, s1;\n\n      s0 = peg$parseopen();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseunknown();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseyear_month_day();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseyear_season();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseyear_month();\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parseyear();\n                if (s1 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c21(s1);\n                }\n                s0 = s1;\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseyear_month_day() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parseyear();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s2 = peg$c22;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsemonth();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s4 = peg$c22;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c23); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseday();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c24(s1, s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseyear_month() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseyear();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s2 = peg$c22;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsemonth();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c25(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseyear_season() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseyear();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s2 = peg$c22;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseseason();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c26(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseyear() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 121) {\n        s1 = peg$c27;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s3 = peg$c22;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c23); }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseyeardigits();\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseyeardigits() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = [];\n      s3 = peg$parseDIGIT();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseDIGIT();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 47) {\n          s3 = peg$c0;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c1); }\n        }\n        peg$silentFails--;\n        if (s3 === peg$FAILED) {\n          s2 = void 0;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseUNKNOWN();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseUNKNOWN();\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          peg$silentFails++;\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s4 = peg$c0;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c1); }\n          }\n          peg$silentFails--;\n          if (s4 === peg$FAILED) {\n            s3 = void 0;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parseseason() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c30) {\n        s1 = peg$c30;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c31); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c32) {\n          s1 = peg$c32;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c33); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 2) === peg$c34) {\n            s1 = peg$c34;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c35); }\n          }\n          if (s1 === peg$FAILED) {\n            if (input.substr(peg$currPos, 2) === peg$c36) {\n              s1 = peg$c36;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c37); }\n            }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parsemonth() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parseUNKNOWN_MONTH();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseUNKNOWN();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = peg$parseUNKNOWN_MONTH();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseDIGIT();\n          if (s3 !== peg$FAILED) {\n            s2 = [s2, s3];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseDIGIT();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c38(s1);\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 117) {\n            s1 = peg$c39;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c41();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 120) {\n              s1 = peg$c42;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c43); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c44();\n            }\n            s0 = s1;\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseday() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$parseUNKNOWN_DAY();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseUNKNOWN();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = peg$parseUNKNOWN_DAY();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseDIGIT();\n          if (s3 !== peg$FAILED) {\n            s2 = [s2, s3];\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s0 = input.substring(s0, peg$currPos);\n      } else {\n        s0 = s1;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseDIGIT();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c38(s1);\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 117) {\n            s1 = peg$c39;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c41();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 120) {\n              s1 = peg$c42;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c43); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c44();\n            }\n            s0 = s1;\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseopen() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 4) === peg$c45) {\n        s1 = peg$c45;\n        peg$currPos += 4;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c46); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c47();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseunknown() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 7) === peg$c48) {\n        s1 = peg$c48;\n        peg$currPos += 7;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c49); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c50();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseDIGIT() {\n      var s0;\n\n      if (peg$c51.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseUNKNOWN() {\n      var s0;\n\n      if (input.charCodeAt(peg$currPos) === 117) {\n        s0 = peg$c39;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 120) {\n          s0 = peg$c42;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c43); }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseUNKNOWN_MONTH() {\n      var s0;\n\n      s0 = peg$parseUNKNOWN();\n      if (s0 === peg$FAILED) {\n        if (peg$c53.test(input.charAt(peg$currPos))) {\n          s0 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseUNKNOWN_DAY() {\n      var s0;\n\n      s0 = peg$parseUNKNOWN();\n      if (s0 === peg$FAILED) {\n        if (peg$c55.test(input.charAt(peg$currPos))) {\n          s0 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c56); }\n        }\n      }\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(\n        null,\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n})();\n},{}]},{},[1])(1)\n});"],"sourceRoot":"/source/"}